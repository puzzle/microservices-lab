quarkus.http.port=8080

# ArticleStock API
application.articlestock.api.url: http://localhost:8081/
article-stock-api/mp-rest/url: ${application.articlestock.api.url}
article-stock-api/mp-rest/scope: javax.inject.Singleton

# Tracing
quarkus.jaeger.endpoint=http://jaeger:14268/api/traces
%dev.quarkus.jaeger.endpoint=http://localhost:14268/api/traces
quarkus.jaeger.service-name=rest-order
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# base uri fix for use with bridged network with docker-compose
application.rewrite.base.enabled=false
application.rewrite.base.host=localhost

# datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = admin
quarkus.datasource.password = 1234
quarkus.datasource.jdbc.url = jdbc:tracing:postgresql://localhost:5432/admin
quarkus.datasource.jdbc.driver=io.opentracing.contrib.jdbc.TracingDriver
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = none

# liquibase properties
quarkus.liquibase.migrate-at-start=true
quarkus.liquibase.clean-at-start=true